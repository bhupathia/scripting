- name: install catalogue componet
host: catalogue
become: yes
 tasks:
  - name: setup npm source
  anisible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: install nodejs
   anisible.builtin.yum:
   name: nodejs
   state: installed

   - name: check user robpshop is exit or not  
    anisible.builtin.command: id roboshop
   register: output
   ignore_errors: true 

   - name: create roboshop user
   become: yes 
   anisible.builtin.user:
   name: roboshop
   when: output.rc != 0

  - name: check /app directory exit or not
   anisible.builtin.stat:
   path: /app
   register: directory

  - name: print the directory stat
   anisible.builtin.debug:
   msg: " output: {{directory}}"

  - when: directory.stat.exists == False
   name: create /app directory
   anisible.builtin.files:
   path: /app
   state: directory 

  - name: download catalogue artifact
    anisible.builtin.get_url:
    url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
    dest: /tmp

  - name: extract catalogue artifact
     anisible.builtin.unarchive:
     src: /tmp/catalogue.zip
     dest: /app
     remote_src: yes

  - name: install dependencies
    anisible.builtin.command: npm install
    args:
     chdir: /app

     - name:  copy catalogue service
     anisible.builtin.copy:
     src: catalogue.service
     dest: /etc/systemd/system/catalogue.service 

     - name: deamon reload
      anisible.builtin.systemd:
      daemon_reload: true

      - name: copy mongo to yum.repos.d
    anisible.builtin.copy:
     src: mongo.repo
     dest: /etc/yum.repos.d/mongo.repo

   - name: install mongodb
     anisible.builtin.yum:
    name:  mongodb-org-shell 
    state: installed 

   - name:  load catalogue data
     anisible.builtin.command: mongo --host mongodb.bhupathinaidu.fun < /app/schema/catalogue.js

   - name: restart catalogue
    anisible.builtin.service:
    name: catalogue
    state: restarted
    enabled: true


    
    



